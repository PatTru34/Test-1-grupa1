//package com.company;
//
//import java.util.Scanner;
//import java.util.Random;
//import java.lang.StringBuffer;
//
//public class Main {
//
//
//
////	1. Wczytać liczbę naturalną n, a następnie wczytując kolejno n liczb naturalnych,
////	napisz publiczną statyczną metodę findPrimes(int[] list) obliczającą, ile liczb
////	pierwszych jest wśród nich.
//
//
//
//
////    public static int findPrimes(int[] list) {
////
////		Scanner scan = new Scanner(System.in);
////
////
////
////
////    	int wynik=0;
////
////		int tab[]=list;
////
////		for(int i=0;i<list.length;i++)
////		{
////		    if(tab[i]==2||tab[i]==3)
////            {
////                wynik+=1;
////            }
////			if(tab[i]%2!=0&tab[i]%3!=0)
////			{
////				wynik+=1;
////			}
////		}
////		return wynik;
////
////    }
////    public static void main(String[] args)
////    {
////        Scanner scan= new Scanner(System.in);
////        int x=0;
////        int n=0;
////        int y=0;
////        while(x!=1)
////        {
////            System.out.print("Podaj n: ");
////            n=scan.nextInt();
////            x=1;
////        }
////        int tab[]=new int[n];
////        for(int i=0;i<n;i++)
////        {
////            System.out.print("Podaj "+(i+1)+ " liczbe: ");
////            y=scan.nextInt();
////            tab[i]=y;
////        }
////        System.out.print(findPrimes(tab));
////
////    }
//
////
////
////	2. Napisz program (z użyciem funkcji), który wczyta do zmiennej n liczbę naturalną
////	wygeneruje n początkowych elementów tablicy o wartościach całkowitych od -50 do
////			50, a następnie znajdzie w tablicy element najmniejszy oraz obliczy ile razy
////	występuje on w tablicy.
//
//
////	public static void main(String[] args)
////	{
////		int x=0;
////		int n=0;
////		int min=0;
////		int ilosc=0;
////		while(x!=1)
////		{
////			System.out.print("Podaj n: ");
////			Scanner scan = new Scanner(System.in);
////			n=scan.nextInt();
////            x=1;
////
////		}
////
////		Random r=new Random();
////		int tab[]=new int[n];
////		for(int i=0;i<n;i++)
////        {
////            tab[i]=r.nextInt((50+50)-50);
////            System.out.print(tab[i]+"\n");
////        }
////        min=tab[0];
////        for(int i=0;i<tab.length;i++)
////        {
////            if(tab[i]<min)
////            {
////                min=tab[i];
////            }
////        }
////        for(int i=0;i<tab.length;i++)
////        {
////            if(tab[i]==min)
////            {
////                ilosc+=1;
////            }
////        }
////        System.out.print("W tej tablicy wystepuje "+ilosc+" najmniejszych elementów o wartości: "+min);
////	}
////
//
//
////
////	3. Napisz publiczną statyczną metodę delete (String str, String substr), która zwraca
////	zmodyfikowany ciąg, usuwając całe wystąpienie substr z wyjątkiem pierwszego
////	wystąpienia.
//
//
//    public static String delete(String str,String substr)
//    {
//
//        int ciag=0;
//        int x=0;
//        StringBuffer sb=new StringBuffer("");
//        for(int i=0;i<str.length();i++)
//        {
//            sb.append(str.charAt(i));
//
//
//            if(str.charAt(i)==substr.charAt(i))
//            {
//                ciag+=1;
//                x+=1;
//            }
//            else
//            {
//                ciag=0;
//                x+=1;
//            }
//
////            if(ciag==substr.length())
////            {
////                ciag=0;
////                sb.delete(i-x,i);
////                x=0;
////            }
//
//        }
//        return sb.toString();
//
//    }
//
//    public static void main(String[] args)
//    {
//        String str="kotkotttdfstdkotttt";
//        String sub="kot";
//        System.out.print(delete(str,sub));
//    }
//
//
//
//}
